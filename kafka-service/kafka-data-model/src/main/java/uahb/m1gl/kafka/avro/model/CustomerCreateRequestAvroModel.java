/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package uahb.m1gl.kafka.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CustomerCreateRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9087427371048955565L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CustomerCreateRequestAvroModel\",\"namespace\":\"uahb.m1gl.kafka.avro.model\",\"fields\":[{\"name\":\"nom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"prenom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"dateNaissance\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"tel\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<CustomerCreateRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CustomerCreateRequestAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CustomerCreateRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CustomerCreateRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CustomerCreateRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CustomerCreateRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CustomerCreateRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CustomerCreateRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CustomerCreateRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String nom;
  private java.lang.String prenom;
  private java.time.LocalDate dateNaissance;
  private java.lang.String tel;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CustomerCreateRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param nom The new value for nom
   * @param prenom The new value for prenom
   * @param dateNaissance The new value for dateNaissance
   * @param tel The new value for tel
   */
  public CustomerCreateRequestAvroModel(java.lang.String nom, java.lang.String prenom, java.time.LocalDate dateNaissance, java.lang.String tel) {
    this.nom = nom;
    this.prenom = prenom;
    this.dateNaissance = dateNaissance;
    this.tel = tel;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nom;
    case 1: return prenom;
    case 2: return dateNaissance;
    case 3: return tel;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nom = value$ != null ? value$.toString() : null; break;
    case 1: prenom = value$ != null ? value$.toString() : null; break;
    case 2: dateNaissance = (java.time.LocalDate)value$; break;
    case 3: tel = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'nom' field.
   * @return The value of the 'nom' field.
   */
  public java.lang.String getNom() {
    return nom;
  }


  /**
   * Sets the value of the 'nom' field.
   * @param value the value to set.
   */
  public void setNom(java.lang.String value) {
    this.nom = value;
  }

  /**
   * Gets the value of the 'prenom' field.
   * @return The value of the 'prenom' field.
   */
  public java.lang.String getPrenom() {
    return prenom;
  }


  /**
   * Sets the value of the 'prenom' field.
   * @param value the value to set.
   */
  public void setPrenom(java.lang.String value) {
    this.prenom = value;
  }

  /**
   * Gets the value of the 'dateNaissance' field.
   * @return The value of the 'dateNaissance' field.
   */
  public java.time.LocalDate getDateNaissance() {
    return dateNaissance;
  }


  /**
   * Sets the value of the 'dateNaissance' field.
   * @param value the value to set.
   */
  public void setDateNaissance(java.time.LocalDate value) {
    this.dateNaissance = value;
  }

  /**
   * Gets the value of the 'tel' field.
   * @return The value of the 'tel' field.
   */
  public java.lang.String getTel() {
    return tel;
  }


  /**
   * Sets the value of the 'tel' field.
   * @param value the value to set.
   */
  public void setTel(java.lang.String value) {
    this.tel = value;
  }

  /**
   * Creates a new CustomerCreateRequestAvroModel RecordBuilder.
   * @return A new CustomerCreateRequestAvroModel RecordBuilder
   */
  public static uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder newBuilder() {
    return new uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder();
  }

  /**
   * Creates a new CustomerCreateRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CustomerCreateRequestAvroModel RecordBuilder
   */
  public static uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder newBuilder(uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder other) {
    if (other == null) {
      return new uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder();
    } else {
      return new uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new CustomerCreateRequestAvroModel RecordBuilder by copying an existing CustomerCreateRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new CustomerCreateRequestAvroModel RecordBuilder
   */
  public static uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder newBuilder(uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel other) {
    if (other == null) {
      return new uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder();
    } else {
      return new uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for CustomerCreateRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CustomerCreateRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<CustomerCreateRequestAvroModel> {

    private java.lang.String nom;
    private java.lang.String prenom;
    private java.time.LocalDate dateNaissance;
    private java.lang.String tel;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nom)) {
        this.nom = data().deepCopy(fields()[0].schema(), other.nom);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.prenom)) {
        this.prenom = data().deepCopy(fields()[1].schema(), other.prenom);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.dateNaissance)) {
        this.dateNaissance = data().deepCopy(fields()[2].schema(), other.dateNaissance);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.tel)) {
        this.tel = data().deepCopy(fields()[3].schema(), other.tel);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing CustomerCreateRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.nom)) {
        this.nom = data().deepCopy(fields()[0].schema(), other.nom);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.prenom)) {
        this.prenom = data().deepCopy(fields()[1].schema(), other.prenom);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dateNaissance)) {
        this.dateNaissance = data().deepCopy(fields()[2].schema(), other.dateNaissance);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tel)) {
        this.tel = data().deepCopy(fields()[3].schema(), other.tel);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'nom' field.
      * @return The value.
      */
    public java.lang.String getNom() {
      return nom;
    }


    /**
      * Sets the value of the 'nom' field.
      * @param value The value of 'nom'.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder setNom(java.lang.String value) {
      validate(fields()[0], value);
      this.nom = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'nom' field has been set.
      * @return True if the 'nom' field has been set, false otherwise.
      */
    public boolean hasNom() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nom' field.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder clearNom() {
      nom = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'prenom' field.
      * @return The value.
      */
    public java.lang.String getPrenom() {
      return prenom;
    }


    /**
      * Sets the value of the 'prenom' field.
      * @param value The value of 'prenom'.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder setPrenom(java.lang.String value) {
      validate(fields()[1], value);
      this.prenom = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'prenom' field has been set.
      * @return True if the 'prenom' field has been set, false otherwise.
      */
    public boolean hasPrenom() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'prenom' field.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder clearPrenom() {
      prenom = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateNaissance' field.
      * @return The value.
      */
    public java.time.LocalDate getDateNaissance() {
      return dateNaissance;
    }


    /**
      * Sets the value of the 'dateNaissance' field.
      * @param value The value of 'dateNaissance'.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder setDateNaissance(java.time.LocalDate value) {
      validate(fields()[2], value);
      this.dateNaissance = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dateNaissance' field has been set.
      * @return True if the 'dateNaissance' field has been set, false otherwise.
      */
    public boolean hasDateNaissance() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'dateNaissance' field.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder clearDateNaissance() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'tel' field.
      * @return The value.
      */
    public java.lang.String getTel() {
      return tel;
    }


    /**
      * Sets the value of the 'tel' field.
      * @param value The value of 'tel'.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder setTel(java.lang.String value) {
      validate(fields()[3], value);
      this.tel = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'tel' field has been set.
      * @return True if the 'tel' field has been set, false otherwise.
      */
    public boolean hasTel() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'tel' field.
      * @return This builder.
      */
    public uahb.m1gl.kafka.avro.model.CustomerCreateRequestAvroModel.Builder clearTel() {
      tel = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CustomerCreateRequestAvroModel build() {
      try {
        CustomerCreateRequestAvroModel record = new CustomerCreateRequestAvroModel();
        record.nom = fieldSetFlags()[0] ? this.nom : (java.lang.String) defaultValue(fields()[0]);
        record.prenom = fieldSetFlags()[1] ? this.prenom : (java.lang.String) defaultValue(fields()[1]);
        record.dateNaissance = fieldSetFlags()[2] ? this.dateNaissance : (java.time.LocalDate) defaultValue(fields()[2]);
        record.tel = fieldSetFlags()[3] ? this.tel : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CustomerCreateRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<CustomerCreateRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CustomerCreateRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<CustomerCreateRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










